name: Compile Corsair Engine

on: [push]

jobs:
  windows:
    name: Windows
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-latest ]
        config: [ release ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate Project Files
        run: call "Visual Studio 2017.bat" & call "Visual Studio 2019.bat" & call "Visual Studio 2022.bat"
      - name: MSVC 2017
        uses: microsoft/setup-msbuild@v1.3
        with:
          vs-version: vs2017
      - name: MSVC 2017 Release
        run: msbuild workspace/vs2017/crstl.sln -p:Configuration=Release -p:Platform="MSVC 64" -m

  linux:
    name: Linux
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        config: [ release ]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate Project Files
        run: ./Linux.sh;
      - name: Linux Clang C++11
        run: pushd workspace/gmake; make config=${{ matrix.config }}_linux64_clang_c++11 -j$(nproc);
      - name: Linux Clang C++14
        run: pushd workspace/gmake; make config=${{ matrix.config }}_linux64_clang_c++14 -j$(nproc);
      - name: Linux GCC C++11
        run: pushd workspace/gmake; make config=${{ matrix.config }}_linux64_gcc_c++11 -j$(nproc);
      - name: Linux GCC C++14
        run: pushd workspace/gmake; make config=${{ matrix.config }}_linux64_gcc_c++14 -j$(nproc);
