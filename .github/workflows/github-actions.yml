name: Compile Corsair Engine

on: [push]

jobs:
  windows:
    name: Windows
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-latest ]
        config: [ release ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download 2017 Build Tools
        run: |
          Invoke-WebRequest -Uri "https://aka.ms/vs/15/release/vs_buildtools.exe" -OutFile "vs_buildtools_2017.exe"
      - name: Install VS2017 Build Tools
        run: |
          .\vs_buildtools_2017.exe --wait --quiet --norestart --nocache --add Microsoft.VisualStudio.Workload.MSBuildTools --add Microsoft.VisualStudio.Workload.VCTools --includeRecommended
      - name: Generate Project Files
        run: ./'Visual Studio 2017.bat'
      - name: MSVC 2017
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: 15.0
      - name: Check Build Tools Directory
        run: |
          if (Test-Path "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\") {
            Write-Host "VS2017 Build Tools directory exists."
            dir "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\"
          } else {
            Write-Host "VS2017 Build Tools directory not found!"
            exit 1
          }
        shell: powershell
      - name: MSVC 2017 Release
        run: |
          & "C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin/MSBuild.exe" workspace/vs2017/crstl.sln -p:Configuration=Release -p:Platform="MSVC 64" -m

  linux:
    name: Linux
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        config: [ release ]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate Project Files
        run: ./Linux.sh;
      - name: Linux Clang C++11
        run: pushd workspace/gmake; make config=${{ matrix.config }}_linux64_clang_c++11 -j$(nproc);
      - name: Linux Clang C++14
        run: pushd workspace/gmake; make config=${{ matrix.config }}_linux64_clang_c++14 -j$(nproc);
      - name: Linux GCC C++11
        run: pushd workspace/gmake; make config=${{ matrix.config }}_linux64_gcc_c++11 -j$(nproc);
      - name: Linux GCC C++14
        run: pushd workspace/gmake; make config=${{ matrix.config }}_linux64_gcc_c++14 -j$(nproc);
