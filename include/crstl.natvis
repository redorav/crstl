<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

	<Type Name="crstl::array&lt;*,*&gt;">
		<DisplayString Condition="$T2 == 0">[{$T2}] {{}}</DisplayString>
		<DisplayString Condition="$T2 == 1">[{$T2}] {{ {*m_data} }}</DisplayString>
		<DisplayString Condition="$T2 == 2">[{$T2}] {{ {*m_data}, {*(m_data+1)} }}</DisplayString>
		<DisplayString Condition="$T2 == 3">[{$T2}] {{ {*m_data}, {*(m_data+1)}, {*(m_data+2)} }}</DisplayString>
		<DisplayString Condition="$T2 == 4">[{$T2}] {{ {*m_data}, {*(m_data+1)}, {*(m_data+2)}, {*(m_data+3)} }}</DisplayString>
		<DisplayString Condition="$T2 == 5">[{$T2}] {{ {*m_data}, {*(m_data+1)}, {*(m_data+2)}, {*(m_data+3)}, {*(m_data+4)} }}</DisplayString>
		<DisplayString Condition="$T2 == 6">[{$T2}] {{ {*m_data}, {*(m_data+1)}, {*(m_data+2)}, {*(m_data+3)}, {*(m_data+4)}, {*(m_data+5)} }}</DisplayString>
		<DisplayString Condition="$T2 &gt; 6">[{$T2}] {{ {*m_data}, {*(m_data+1)}, {*(m_data+2)}, {*(m_data+3)}, {*(m_data+4)}, {*(m_data+5)}, ... }}</DisplayString>
		<Expand>
			<Item Name="[size]">$T2</Item>
			<ArrayItems>
				<Size>$T2</Size>
				<ValuePointer>m_data</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="crstl::basic_fixed_string&lt;*&gt;">
		<DisplayString>{m_data} [length = {m_length}]</DisplayString>

		<Expand>
			<Item Name="[length]">m_length</Item>
			<Item Name="[capacity]">$T2</Item>
			<Item Name="[value]">m_data</Item>
		</Expand>
	</Type>

	<Type Name="crstl::deque&lt;*,*,*&gt;">
		<DisplayString>[size = {m_length}]</DisplayString>

		<Expand>
			<Item Name="[capacity]">m_capacity_allocator.m_first</Item>
			<Item Name="[size]">m_length</Item>

			<IndexListItems>
				<Size>m_length</Size>
				<ValueNode>m_chunk_array[(m_chunk_begin * $T3 + m_local_begin + $i) / $T3]->m_data[(m_chunk_begin * $T3 + m_local_begin + $i) % $T3]</ValueNode>
			</IndexListItems>

		</Expand>
	</Type>

	<Type Name="crstl::fixed_deque&lt;*,*&gt;">
		<DisplayString>[size = {m_length}]</DisplayString>

		<Expand>
			<Item Name="[capacity]">$T2</Item>
			<Item Name="[size]">m_length</Item>
	
			<IndexListItems>
				<Size>m_length</Size>
				<ValueNode>m_begin + $i &lt; $T2 ? m_data[m_begin + $i] : m_data[m_begin + $i - $T2]</ValueNode>
			</IndexListItems>

		</Expand>
	</Type>

	<Type Name="crstl::fixed_vector&lt;*,*&gt;">
		<DisplayString>[size = {m_length}]</DisplayString>

		<Expand>
			<Item Name="[capacity]">$T2</Item>
			<Item Name="[size]">m_length</Item>
			<ArrayItems>
				<Size>m_length</Size>
				<ValuePointer>m_data</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="crstl::half">
		<Intrinsic Name="cast_utof" Expression="*((float*)&amp;u)"> <Parameter Name="u" Type="unsigned long"/> </Intrinsic>
		<Intrinsic Name="cast_ftou" Expression="*((unsigned long*)&amp;f)"> <Parameter Name="f" Type="float"/> </Intrinsic>		
		<Intrinsic Name="e" Expression="(m_value &amp; 0x7C00) &gt;&gt; 10"/>
		<Intrinsic Name="m" Expression="(m_value &amp; 0x03FF) &lt;&lt; 13"/>
		<Intrinsic Name="p" Expression="cast_ftou((float)u) &gt;&gt; 23"> <Parameter Name="u" Type="unsigned long"/> </Intrinsic>
		<Intrinsic Name="v" Expression="p(m())"/>		
		<DisplayString>[short = {cast_utof((m_value &amp; 0x8000) &lt;&lt; 16 | (e() != 0) * ((e() + 112) &lt;&lt; 23 | m()) | ((e() == 0) &amp; (m() != 0)) * ((v() - 37) &lt;&lt; 23 | ((m() &lt;&lt; (150 - v())) &amp; 0x007FE000)))}]</DisplayString>
	</Type>

	<Type Name="crstl::intrusive_ptr&lt;*&gt;">
		<DisplayString Condition="m_ptr != nullptr">({(void*)m_ptr} = {*m_ptr})</DisplayString>
		<DisplayString Condition="m_ptr == nullptr">nullptr</DisplayString>
		<Expand>
			<Item Condition="m_ptr != nullptr" Name="[pointer]">(void*)m_ptr</Item>
			<Item Condition="m_ptr != nullptr" Name="[value]">*m_ptr</Item>
			<Item Condition="m_ptr != nullptr" Name="[refcount]">m_ptr->m_refcount</Item>
		</Expand>
	</Type>

	<Type Name="crstl::unique_ptr&lt;*&gt;">
		<DisplayString Condition="m_ptr != nullptr">({(void*)m_ptr} = {*m_ptr})</DisplayString>
		<DisplayString Condition="m_ptr == nullptr">nullptr</DisplayString>
		<Expand>
			<Item Name="[pointer]">(void*)m_ptr</Item>
			<Item Name="[value]">*m_ptr</Item>
		</Expand>
	</Type>

	<Type Name="crstl::vector&lt;*,*&gt;">
		<DisplayString>[size = {m_length}]</DisplayString>

		<Expand>
			<Item Name="[capacity]">m_capacity_allocator.m_first</Item>
			<Item Name="[size]">m_length</Item>
			<ArrayItems>
				<Size>m_length</Size>
				<ValuePointer>m_data</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="crstl::span&lt;*&gt;">
		<DisplayString>[size = {m_length}]</DisplayString>

		<Expand>
			<Item Name="[size]">m_length</Item>
			<ArrayItems>
				<Size>m_length</Size>
				<ValuePointer>m_data</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="crstl::stack_vector&lt;*&gt;">
		<DisplayString>[size = {m_length}]</DisplayString>

		<Expand>
			<Item Name="[capacity]">m_capacity</Item>
			<Item Name="[size]">m_length</Item>
			<ArrayItems>
				<Size>m_length</Size>
				<ValuePointer>m_data</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="crstl::basic_string&lt;char,*&gt;">

		<DisplayString Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)"> {m_layout_allocator.m_first.m_sso.data, s8} [{kSSOCapacity - m_layout_allocator.m_first.m_sso.remaining_length.value}] [sso] </DisplayString>
		<DisplayString Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)"> {m_layout_allocator.m_first.m_heap.data, s8} [{m_layout_allocator.m_first.m_heap.length}] [heap] </DisplayString>

		<StringView Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)">m_layout_allocator.m_first.m_sso.data, s8</StringView>
		<StringView Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)">m_layout_allocator.m_first.m_heap.data, s8</StringView>

		<Expand>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[length]">kSSOCapacity - m_layout_allocator.m_first.m_sso.remaining_length.value</Item>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[capacity]">kSSOCapacity</Item>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[value]">m_layout_allocator.m_first.m_sso.data, s8</Item>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[heap]">false</Item>

			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[length]">m_layout_allocator.m_first.m_heap.length</Item>
			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[capacity]">m_layout_allocator.m_first.m_heap.capacity &amp; kHeapCapacityMask</Item>
			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[value]">m_layout_allocator.m_first.m_heap.data, s8</Item>
			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[heap]">true</Item>
		</Expand>
	</Type>

	<Type Name="crstl::basic_string&lt;wchar_t,*&gt;">

		<DisplayString Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)"> {m_layout_allocator.m_first.m_sso.data, su} [{kSSOCapacity - m_layout_allocator.m_first.m_sso.remaining_length.value}] [sso] </DisplayString>
		<DisplayString Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)"> {m_layout_allocator.m_first.m_heap.data, su} [{m_layout_allocator.m_first.m_heap.length}] [heap] </DisplayString>

		<StringView Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)">m_layout_allocator.m_first.m_sso.data, su</StringView>
		<StringView Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)">m_layout_allocator.m_first.m_heap.data, su</StringView>

		<Expand>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[length]">kSSOCapacity - m_layout_allocator.m_first.m_sso.remaining_length.value</Item>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[capacity]">kSSOCapacity</Item>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[value]">m_layout_allocator.m_first.m_sso.data, su</Item>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[heap]">false</Item>

			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[length]">m_layout_allocator.m_first.m_heap.length</Item>
			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[capacity]">m_layout_allocator.m_first.m_heap.capacity &amp; kHeapCapacityMask</Item>
			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[value]">m_layout_allocator.m_first.m_heap.data, su</Item>
			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[heap]">true</Item>
		</Expand>
	</Type>

	<Type Name="crstl::basic_string&lt;*,*&gt;">

		<DisplayString Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)"> {m_layout_allocator.m_first.m_sso.data} [{kSSOCapacity - m_layout_allocator.m_first.m_sso.remaining_length.value}] [sso] </DisplayString>
		<DisplayString Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)"> {m_layout_allocator.m_first.m_heap.data} [{m_layout_allocator.m_first.m_heap.length}] [heap] </DisplayString>

		<StringView Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)">m_layout_allocator.m_first.m_sso.data</StringView>
		<StringView Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)">m_layout_allocator.m_first.m_heap.data</StringView>

		<Expand>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[length]">kSSOCapacity - m_layout_allocator.m_first.m_sso.remaining_length.value</Item>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[capacity]">kSSOCapacity</Item>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[value]">m_layout_allocator.m_first.m_sso.data, s</Item>
			<Item Condition="!(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[heap]">false</Item>

			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[length]">m_layout_allocator.m_first.m_heap.length</Item>
			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[capacity]">m_layout_allocator.m_first.m_heap.capacity &amp; kHeapCapacityMask</Item>
			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[value]">m_layout_allocator.m_first.m_heap.data, s</Item>
			<Item Condition="(m_layout_allocator.m_first.m_sso.remaining_length.value &amp; kSSOMask)" Name="[heap]">true</Item>
		</Expand>
	</Type>

</AutoVisualizer>